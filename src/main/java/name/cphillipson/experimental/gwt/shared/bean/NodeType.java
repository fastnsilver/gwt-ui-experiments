package name.cphillipson.experimental.gwt.shared.bean;

import name.cphillipson.experimental.gwt.shared.i18n.I18NConstants;

/**
 * Types for <code>Navigable</code>s.
 * @author cphillipson
 *
 */
public enum NodeType {

    ADMINISTRATION(I18NConstants.ADMINISTRATION),
    ALPHA(I18NConstants.ALPHA),
    BINDING_LIMITS(I18NConstants.BINDING_LIMITS),
    CLEARED(I18NConstants.CLEARED_OFFERS),
    CLEARED_OFFER(I18NConstants.CLEARED_OFFER),
    CLEARED_OFFERS(I18NConstants.CLEARED_OFFERS),
    CURRENT_NOTIFICATIONS(I18NConstants.CURRENT),
    DEMAND(I18NConstants.DEMAND),
    DEMAND_CURVE(I18NConstants.DEMAND_CURVE),
    DISPATCH_STATUS(I18NConstants.DISPATCH_STATUS),
    DISTRIBUTION_FACTORS(I18NConstants.DISTRIBUTION_FACTORS),
    ENERGY_OFFER(I18NConstants.ENERGY_OFFER),
    ENERGY_OFFERS(I18NConstants.ENERGY_OFFERS),
    GRIDS(I18NConstants.GRIDS),
    LOCATION(I18NConstants.LOCATION),
    LOCATIONS(I18NConstants.LOCATIONS),
    MARKET(I18NConstants.MARKET),
    MARKET_TYPE(I18NConstants.MARKET),
    MESSAGES(I18NConstants.MESSAGES),
    MONITOR_NOTIFICATIONS(I18NConstants.MONITOR),
    MONITOR_TRANSACTIONS(I18NConstants.MONITOR),
    MW_SUMMARY(I18NConstants.MW_SUMMARY),
    NOTIFICATIONS(I18NConstants.NOTIFICATIONS),
    OBLIGATIONS(I18NConstants.OBLIGATIONS),
    OPERATING_DAY(I18NConstants.OPERATING_DAY),
    OVERRIDES(I18NConstants.OVERRIDES),
    PARAMETERS(I18NConstants.PARAMETERS),
    PERSPECTIVE(I18NConstants.PERSPECTIVE),
    PRICE_SUMMARY(I18NConstants.PRICE_SUMMARY),
    PRODUCT_TYPE(I18NConstants.PRODUCT_TYPE),
    QUERY_TRANSACTIONS(I18NConstants.QUERY),
    RAMP_RATE_DOWN(I18NConstants.RAMP_RATE_DOWN),
    RAMP_RATE_TYPE(I18NConstants.RAMP_RATE_TYPE),
    RAMP_RATE_UP(I18NConstants.RAMP_RATE_UP),
    REGULATION_OFFER_DOWN(I18NConstants.REGULATION_OFFER_DOWN),
    REGULATION_OFFER_UP(I18NConstants.REGULATION_OFFER_UP),
    REGULATION_OFFERS(I18NConstants.REGULATION_OFFERS),
    REQUIREMENTS(I18NConstants.REQUIREMENTS),
    RESERVE_ZONE(I18NConstants.RESERVE_ZONE),
    RESERVE_ZONES(I18NConstants.RESERVE_ZONES),
    RESOURCE(I18NConstants.RESOURCE),
    RESOURCE_OFFER(I18NConstants.RESOURCE_OFFER),
    RESOURCE_OFFERS(I18NConstants.RESOURCE_OFFERS),
    RESOURCES(I18NConstants.RESOURCES),
    ROOT(I18NConstants.ROOT),
    SETTINGS(I18NConstants.SETTINGS),
    SPINNING_OFFER(I18NConstants.SPINNING_OFFER),
    SUPPLEMENTAL_OFFER(I18NConstants.SUPPLEMENTAL_OFFER),
    SUPPLY(I18NConstants.SUPPLY),
    TIMELINE_EVENTS(I18NConstants.TIMELINE_EVENTS),
    TRANSACTION_LOG(I18NConstants.TRANSACTION_LOG),
    URL_MANAGER_FOR_NOTIFICATIONS(I18NConstants.URL_MANAGER),
    VERSION(I18NConstants.VERSION),
    VIOLATION_RELAXATION_LIMITS(I18NConstants.VIOLATION_RELAXATION_LIMITS),
    VIRTUAL(I18NConstants.VIRTUAL),
    VIRTUAL_BID(I18NConstants.VIRTUAL_BID),
    VIRTUAL_OFFER(I18NConstants.VIRTUAL_OFFER);

    private String id;

    private NodeType(String type) {
        id = type;
    }

    public String getId() {
        return id;
    }

}
